title          = RapidSVN
page_title     = RapidSVN

<h1>RapidSVN</h1>
<p>Data: 2005.04.08-</p>
<p>
<h2>Disclaimer</h2>
<p>
I have started to write this documentation on 2005 Arpil 8. There are more bits 
and pieces than real documentation so take it easy.<br  />
$LastChangedDate: 2007-05-26 12:43:05 +0300 (Sat, 26 May 2007) $<br />
$Rev: 2763 $<br />
Copyright Gabor Szabo<br />
Latest version can be found at: <a href="http://www.szabgab.com/articles/rapidsvn.html">http://www.szabgab.com/articles/rapidsvn.html</a><br />
</p>

<p>
This documentation is being written based on the following versions:
</p>
<ul>
 <li>RapidSVN 0.7.1 on Microsoft Windows downloaded from 
     <a href="http://rapidsvn.tigris.org/servlets/ProjectDocumentList?folderID=184">here</a></li>
 <li>RapidSVN 0.7.2 on Fedora 3 downloaded from <a href="http://dag.wieers.com/home-made/apt/">DAG</a></li>
</ul>
<p>
I am mainly using the one on Fedora so most of the text is based on that version.
</p>
<h2>Download and Installaton</h2>
<p>
You can download binary distributions for Debian, Red Hat and Microsoft Windows from the 
<a href="http://rapidsvn.tigris.org/#download">RapidSVN web site</a>.
Fedora Core and other Red Hat binary packages are available from 
<a href="http://dag.wieers.com/home-made/apt/">DAG</a>.
</p>
<p>
The Windows version is self installing while on Linux you will be able to use
your local package manager to retrive and install the pre-packaged binary version.
</p>
<p>
In case you don't find a binary version for your platform you can try to build one
from source. 
Source tarballs of the released version can be found 
<a href="http://rapidsvn.tigris.org/servlets/ProjectDocumentList?folderID=353">here</a>.
Instruction on how to build it are inside.
</p>
<h2>Quick Start</h2>
<p>
After installing the self extractable executable you 
can start the application by clicking on the RapidSVN icon or by typing
<i>rapidsvn</i> on your command line.
</p>
<p>
<i><b>If you already have a checked-out version of some repository</b></i>
<p>
you can start using RapidSVN with this working copy:

<ol>
 <li>Right click on Bookmarks</li>
 <li>Select "Add Existing Working Copy..."</li>
 <li>Locate the directory where you have already checked out a repositry</li>
 <li>Press OK</li>
</ol>
</p>
<i><b>If you have not used Subversion earlier</b></i>
<p>First we take a look at how to use RapidSVN with an already 
existing repository. For this we have a publicly available repository at
http://svn.pti.co.il/svn/test/</p>
<p>Later we'll learn how to setup our own repository and work with that</p>
<ol>
 <li>Right click on Bookmarks</li>
 <li>Select "Checkout New Working Copy..."</li>
 <li>
 <ul> 
  <li>In URL type in the address of the Repository you want to work with<br />
       (e.g. type in http://svn.pti.co.il/svn/test/trunk/ )
  <li>In Destination directory type the local directory where you want to work:<br />
     (e.g. c:\patch\test  or /home/gabor/patch/test )</li>
  <li>Press OK. (For now don't worry about the 3 check boxen and the Revision box.</li>
 </ul>
  If you selected a repository that is protected by username/password then
  you'll be asked to supply this information now. (in our example the username is "anonymous" while
  the passowrd should be left empty)<br />

  The application then goes and checks out the latest version of each file
  from the selected repostory.
</ol>
</p>
<p>
Now that you already have a working copy of a repository you can locate it on your
hard disk. Select one of the files, open it with your regular text editor 
(notepad, vi, emacs or whatever you like to use).
Make some changes (e.g. add a comment to the file)
</p>
<p>
Going back to RapidSVN windows you


<h2>Configuration</h2>
<h3>Linux</h3>
<ul>
 <li>gvim</li>
 <li>gvimdiff</li>
</ul>
<p>
The problem with usingg gvim and gvimdiff is that when the the file is already
open for editing by gvim you cannot diff it without the annoying warning of
gvim.
<br />
Naturally if you prefer to use other editors and diff tools you can do
that too.
</p>
<h3>Microsoft Windows</h3>
<ul>
 <li>notepad</li>
</ul>

<h2>Authentication</h2>
<p>
RapidSVN is partially using the authentication methods and files of the command line Subversion tool.
If you have already used the command line SVN tools and authenticated with a Subversion server
your username and password are kept in ~/.subversion/auth/
This means in Linux it keeps the username and password information somewhere in 
in clear text format. You can change this behavior in ...(pointer to SVN book)

<!-- Question: Is there a way... -->
</p>

<h2>Other</h2>
<ul>
  <li>Bookmarks<br />
      Bookmarks are either pointing to local work directories or directly to Subversion repositories. 
      They allow you to browse into the directory tree of either the working copy or the real repository.
      They provide the basic method to access your files using RapidSVN.
  </li>
</ul>

<h2>Command line to RapidSVN transition</h2>
<p>
Especially for people whom are already familiar with the command line
Subversion client, below you can find a mapping from some of the CLI commands
to the relevant actions in RapidSVN. 
</p>
<ul>
 <li>svn status
 <ul>
    <li></li>
 </ul>
 </li>
 <li>svn diff
 <ul>
    <li></li>
    <li>Ctr-</li>
 </ul>
 </li>
 <li>svn log
 <ul>
    <li></li>
    <li>Ctr-</li>
 </ul>
 </li>
 <li>svn update
 <ul>
    <li>Menu: Modify/Update</li>
    <li>Ctr-u</li>
    <li>Right-click on file, directory or Bookmark/Update</li>
 </ul>
 </li>
 <li>svn add
 <ul>
    <li></li>
    <li>Ctr-</li>
 </ul>
 </li>
 <li>svn move
 <ul>
    <li></li>
    <li>Ctr-</li>
 </ul>
 </li>
 <li>svn delete
 <ul>
    <li></li>
    <li>Ctr-</li>
 </ul>
 </li>
 <li>svn checkout
  <ul>
    <li>Menu: Repostirory/Checkout</li>
    <li>Ctr-o</li>
    <li>Right-click on Bookmarks/Checkout New Working Copy...</li>
  </ul>
 </li>
 <li>svn commit
 <ul>
    <li>Menu: </li>
    <li>Ctr-m (does not seem to work in my Linux)</li>
    <li>Right-click: Update</li>
 </ul>
 </li>
</ul>

<h2>FAQ</h2>
<p>
I am not sure I can consider this really Frequently Asked Questions as I just try to collect
the questions that came up on the RapidSVN mailing list.
<ul>
 <li> What is the relation of RapidSVN and regular Subversion client ?<br />
     RapidSVN is basically a Subversion client implementation (using the already available libraries).
     It provides a similar set of features with a graphical interface.
 </li>
 <li>How can I see remote status of a file ?<br />
  There is a switch in the "View" menu called "Refresh with Update"
 </li>

</ul>
</p>

<h2>See also</h2>
<ul>
 <li><a href="http://www.onlamp.com/pub/a/onlamp/2005/03/10/svn_uis.html">Subversion UI Shootout</a></li>
 <li><a href="http://rapidsvn.tigris.org/">RapidSVN web site, mailing lists</a></li>
 <li><a href="http://www.rapidsvn.org/wiki">RapidSVN Wiki</a></li>
</ul>

<!--
Comments, problems to report:

When right clicking on a bookmark I'd like to be able to see information
about this bookmark (e.g. what repository does it belong to)

The pop-up menu items 
"Add existing working copy..."
"Checkout new working copy..."
"Add existing repository"
"Create new repository"

IMHO Should appear only when I right click on the "Bookmarks" word and not
when right clicking on an individual bookmark.

On Fedora Core 3, RapidSVN 0.7.2
Ctr-M to Commit a file does not seem to work.

Losing file selection
I select a file in RapidSVN, pressF3 to edit it (using gvim)
when I Alt-TAB back to back to RapidSVN the file selection is lost.

When adding new directory left pane is not refreshed
After I added a new directory (mkdir), added it to the repository and
even committed the changes the right pane was refreshed as expected
but in the left pane I still saw question marks on the folder names.

Pressing the refresh button refreshed that part of the window as well.

How to enforce custom fileds during commit ? 
Maybe add a way to add templates for commit comments.

(properties in Subversion ?)


Compare with http://esvn.umputun.com/
PySVN WorkBench http://pysvn.tigris.org/


-->

